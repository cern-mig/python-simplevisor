.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SIMPLEVISOR 1"
.TH SIMPLEVISOR 1 "2014-02-27" "" "simplevisor man page"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
simplevisor 0.9 \- simple daemons supervisor
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBsimplevisor\fR
[\-\-conf \s-1CONF\s0][\-\-daemon][\-\-interval \s-1INTERVAL\s0][\-h][\-\-log \s-1LOG\s0][\-\-logfile \s-1LOGFILE\s0][\-\-loglevel \s-1LOGLEVEL\s0][\-\-logname \s-1LOGNAME\s0][\-p \s-1PIDFILE\s0][\-\-store \s-1STORE\s0][\-\-version]
command [path]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Simplevisor is a simple daemons supervisor, it is inspired
by Erlang \s-1OTP\s0 and it can supervise hierarchies of services.
.PP
\&\s-1COMMANDS\s0
.PP
If a path is given or only one service entry is given:
.PP
for given command X
    run the service X command where service is the only entry provided
    or the entry identified by its path
.PP
If path is not given and root entry is a supervisor:
.PP
start
    start the simplevisor process which start the supervision.
    It can be used with \-\-daemon if you want it as daemon
.PP
stop
    stop the simplevisor process and all its children, if running
.PP
status
    return the status of the simplevisor process
.PP
check
    return the comparison between the expected state and the actual state.
    0 \-> everything is fine
    1 \-> warning, not expected
.PP
restart
    stop + start the simplevisor process
.PP
single
    execute one cycle of supervision and exit.
    Useful to be run in a cron script
.PP
stop_supervisor
    stop only the simplevisor process and the supervision
.PP
stop_children
    stop only the children
.PP
configuration_check
    just check the configuration
.PP
pod
    generate pod format help to be used by pod2man to generate man page
.PP
rst
    generate rst format help to be used in the web doc
.PP
help
    same as \-h/\-\-help, print help page
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fBpositional arguments:\fR
.Sp
.RS 4
\&\fBcommand\fR check, configuration_check, help, pod, restart, rst, single, start, status, stop, stop_children, stop_supervisor
.Sp
\&\fBpath\fR path to a service, subset of commands available: start, stop, status, check, restart
.RE
.PP
\&\fBoptional arguments:\fR
.Sp
.RS 4
\&\fB\-\-conf \s-1CONF\s0\fR configuration file
.Sp
\&\fB\-\-daemon\fR daemonize, \s-1ONLY\s0 with start
.Sp
\&\fB\-\-interval \s-1INTERVAL\s0\fR interval to wait between supervision cycles (default: 60)
.Sp
\&\fB\-h, \-\-help\fR print the help page
.Sp
\&\fB\-\-log \s-1LOG\s0\fR available: null, file, syslog, stdout (default: stdout)
.Sp
\&\fB\-\-logfile \s-1LOGFILE\s0\fR log file, \s-1ONLY\s0 for file
.Sp
\&\fB\-\-loglevel \s-1LOGLEVEL\s0\fR log level (default: warning)
.Sp
\&\fB\-\-logname \s-1LOGNAME\s0\fR log name (default: simplevisor)
.Sp
\&\fB\-p, \-\-pidfile \s-1PIDFILE\s0\fR the pidfile
.Sp
\&\fB\-\-store \s-1STORE\s0\fR file where to store the state, it is not mandatory,however recommended to store the simplevisor nodes status between restarts
.Sp
\&\fB\-\-version\fR print the program version
.RE
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Create and edit the main configuration file:
.PP
.Vb 1
\&    ## look for simplevisor.conf.example in the examples.
.Ve
.PP
Run it:
.PP
.Vb 1
\&    simplevisor \-\-conf /path/to/simplevisor.conf start
.Ve
.PP
to run it in daemon mode:
.PP
.Vb 1
\&    simplevisor \-\-conf /path/to/simplevisor.conf \-\-daemon start
.Ve
.PP
For other commands:
.PP
.Vb 1
\&    simplevisor \-\-help
.Ve
.PP
Given the example configuration, to start the httpd service:
.PP
.Vb 1
\&    simplevisor \-\-conf /path/to/simplevisor.conf start svisor1/httpd
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Massimo Paladin <massimo.paladin@gmail.com>
.PP
Copyright (C) \s-1CERN\s0 2013\-2014
